{
  "name": "xhr-status",
  "version": "1.0.0",
  "description": "Normalize XHR status code/text across various of environments",
  "main": "index.js",
  "scripts": {
    "100%": "istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
    "test": "mocha test.js",
    "watch": "mocha --watch test.js",
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- test.js",
    "test-travis": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/unshiftio/xhr-status"
  },
  "keywords": [
    "status",
    "statuscode",
    "text",
    "code",
    "statustext",
    "xhr"
  ],
  "author": {
    "name": "Arnout Kazemier"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/unshiftio/xhr-status/issues"
  },
  "homepage": "https://github.com/unshiftio/xhr-status",
  "devDependencies": {
    "assume": "1.2.x",
    "istanbul": "0.3.x",
    "mocha": "2.2.x",
    "pre-commit": "1.0.x"
  },
  "readme": "# xhr-status\n\n[![Made by unshift][made-by]](http://unshift.io)[![Version npm][version]](http://browsenpm.org/package/xhr-status)[![Build Status][build]](https://travis-ci.org/unshiftio/xhr-status)[![Dependencies][david]](https://david-dm.org/unshiftio/xhr-status)[![Coverage Status][cover]](https://coveralls.io/r/unshiftio/xhr-status?branch=master)[![IRC channel][irc]](http://webchat.freenode.net/?channels=unshift)\n\n[made-by]: https://img.shields.io/badge/made%20by-unshift-00ffcc.svg?style=flat-square\n[version]: https://img.shields.io/npm/v/xhr-status.svg?style=flat-square\n[build]: https://img.shields.io/travis/unshiftio/xhr-status/master.svg?style=flat-square\n[david]: https://img.shields.io/david/unshiftio/xhr-status.svg?style=flat-square\n[cover]: https://img.shields.io/coveralls/unshiftio/xhr-status/master.svg?style=flat-square\n[irc]: https://img.shields.io/badge/IRC-irc.freenode.net%23unshift-00a8ff.svg?style=flat-square\n\nNormalize the XHR status codes across various of environments. This eliminates\nall the odd browser bugs that you might run in to while working with XHR\nrequests in browsers:\n\n- Captures thrown errors when accessing `statusText`\n- Normalizes the `1233` status code in Internet Explorer for `204` content.\n- Normalizes the `0` status code to `200` for `file://` requests.\n\n## Installation\n\nThe module is released in the public npm registry and can be installed by\nrunning:\n\n```\nnpm install --save xhr-status\n```\n\n## Usage\n\nThis module exports a single function. The returned function accepts one single\nargument which is a reference to the `xhr` instance that you've created. It will\nreturn an object with the following keys:\n\n- **code** The XHR status code.\n- **text** The XHR status text.\n\nSee for an implementation example:\n\n```js\n'use strict';\n\nvar xhrstatus = require('xhr-status')\n  , xhr = new XMLHTTPRequest.\n\nxhr.open('GET', 'http://google.com/gen_204', true);\nxhr.onload = function () {\n  var status = xhrstatus(xhr);\n\n  console.log(status.code) // 204\n  console.log(status.text) // OK\n};\n\nxhr.send();\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "xhr-status@1.0.0",
  "dist": {
    "shasum": "ce4698b6109c6334d7d6d8a13c22e3740515e9ba"
  },
  "_from": "xhr-status@1.0.x",
  "_resolved": "https://registry.npmjs.org/xhr-status/-/xhr-status-1.0.0.tgz"
}
